{"ast":null,"code":"var _jsxFileName = \"/home/niemand/Python/massiliarp/frontend/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Route, Switch } from 'react-router-dom'; // Components\n\nimport Login from './components/Login';\nimport Home from './components/Home';\nimport Units from './components/Units';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BACKEND_URL = 'http://localhost:8000';\n\nconst App = () => {\n  _s();\n\n  //State\n  const [csrf, setCsrf] = useState('');\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  const getCSRF = () => {\n    fetch(BACKEND_URL + '/api-auth/csrf/', {\n      credentials: 'include'\n    }).then(res => {\n      const csrfToken = res.headers.get('X-CSRFToken');\n      if (csrfToken !== null) setCsrf(csrfToken);\n      console.log(csrf); // -2\n    });\n  };\n\n  const getSession = () => {\n    fetch(BACKEND_URL + '/api-auth/session/', {\n      credentials: 'include'\n    }).then(res => res.json()).then(data => {\n      console.log(data); // -2\n\n      if (data.isAuthenticated) {\n        setIsAuthenticated(true);\n      } else {\n        setIsAuthenticated(false);\n        getCSRF();\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      render: () => /*#__PURE__*/_jsxDEV(Login, {\n        csrf: csrf,\n        isAuthenticated: isAuthenticated,\n        setAuth: auth => {\n          setIsAuthenticated(auth);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this),\n      exact: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/home\",\n      render: () => /*#__PURE__*/_jsxDEV(Home, {\n        csrf: csrf\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this),\n      exact: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/units\",\n      component: Units,\n      exact: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"IAuF1fGJoVTP/VCDpazmVdlH+0w=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/niemand/Python/massiliarp/frontend/src/App.tsx"],"names":["useState","Route","Switch","Login","Home","Units","BACKEND_URL","App","csrf","setCsrf","isAuthenticated","setIsAuthenticated","getCSRF","fetch","credentials","then","res","csrfToken","headers","get","console","log","getSession","json","data","catch","err","auth"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,OAAO,MAAMC,WAAW,GAAG,uBAApB;;AAEP,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,eAAD,EAAkBC,kBAAlB,IAAwCX,QAAQ,CAAC,KAAD,CAAtD;;AAEA,QAAMY,OAAO,GAAG,MAAM;AACpBC,IAAAA,KAAK,CAACP,WAAW,GAAG,iBAAf,EAAkC;AACrCQ,MAAAA,WAAW,EAAE;AADwB,KAAlC,CAAL,CAGGC,IAHH,CAGQC,GAAG,IAAI;AACX,YAAMC,SAAS,GAAGD,GAAG,CAACE,OAAJ,CAAYC,GAAZ,CAAgB,aAAhB,CAAlB;AACA,UAAIF,SAAS,KAAK,IAAlB,EACER,OAAO,CAACQ,SAAD,CAAP;AAEFG,MAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ,EALW,CAKQ;AACpB,KATH;AAUD,GAXD;;AAaA,QAAMc,UAAU,GAAG,MAAM;AACvBT,IAAAA,KAAK,CAACP,WAAW,GAAG,oBAAf,EAAqC;AACxCQ,MAAAA,WAAW,EAAE;AAD2B,KAArC,CAAL,CAGGC,IAHH,CAGQC,GAAG,IAAIA,GAAG,CAACO,IAAJ,EAHf,EAIGR,IAJH,CAIQS,IAAI,IAAI;AACZJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ,EADY,CACO;;AACnB,UAAIA,IAAI,CAACd,eAAT,EAA0B;AACxBC,QAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,OAFD,MAEO;AACLA,QAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAC,QAAAA,OAAO;AACR;AACF,KAZH,EAaGa,KAbH,CAaSC,GAAG,IAAI;AACZN,MAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACD,KAfH;AAgBD,GAjBD;;AAmBA,sBACE,QAAC,MAAD;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,MAAM,EAAE,mBACtB,QAAC,KAAD;AACE,QAAA,IAAI,EAAElB,IADR;AAEE,QAAA,eAAe,EAAEE,eAFnB;AAGE,QAAA,OAAO,EAAGiB,IAAD,IAAmB;AAAChB,UAAAA,kBAAkB,CAACgB,IAAD,CAAlB;AAAyB;AAHxD;AAAA;AAAA;AAAA;AAAA,cADF;AAMG,MAAA,KAAK;AANR;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,MAAM,EAAE,mBAC1B,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEnB;AAAZ;AAAA;AAAA;AAAA;AAAA,cADF;AAEG,MAAA,KAAK;AAFR;AAAA;AAAA;AAAA;AAAA,YARF,eAWE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAEH,KAAhC;AAAuC,MAAA,KAAK;AAA5C;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CApDD;;GAAME,G;;KAAAA,G;AAsDN,eAAeA,GAAf","sourcesContent":["import { useState } from 'react'\nimport { Route, Switch } from 'react-router-dom'\n\n// Components\nimport Login from './components/Login'\nimport Home from './components/Home'\nimport Units from './components/Units'\n\nexport const BACKEND_URL = 'http://localhost:8000'\n\nconst App = () => {\n  //State\n  const [csrf, setCsrf] = useState('')\n  const [isAuthenticated, setIsAuthenticated] = useState(false)\n\n  const getCSRF = () => {\n    fetch(BACKEND_URL + '/api-auth/csrf/', {\n      credentials: 'include',\n    })\n      .then(res => {\n        const csrfToken = res.headers.get('X-CSRFToken')\n        if (csrfToken !== null)\n          setCsrf(csrfToken)\n\n        console.log(csrf)  // -2\n      })\n  }\n\n  const getSession = () => {\n    fetch(BACKEND_URL + '/api-auth/session/', {\n      credentials: 'include',\n    })\n      .then(res => res.json())\n      .then(data => {\n        console.log(data)  // -2\n        if (data.isAuthenticated) {\n          setIsAuthenticated(true)\n        } else {\n          setIsAuthenticated(false)\n          getCSRF()\n        }\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  }\n\n  return (\n    <Switch>\n      <Route path=\"/\" render={() => (\n        <Login \n          csrf={csrf} \n          isAuthenticated={isAuthenticated}\n          setAuth={(auth: boolean) => {setIsAuthenticated(auth)}}\n         />\n      )} exact />\n      <Route path=\"/home\" render={() => (\n        <Home csrf={csrf} />\n      )} exact />\n      <Route path=\"/units\" component={Units} exact />\n    </Switch>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}