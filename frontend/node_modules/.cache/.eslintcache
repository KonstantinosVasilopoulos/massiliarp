[{"/home/niemand/Python/massiliarp/frontend/src/index.tsx":"1","/home/niemand/Python/massiliarp/frontend/src/App.tsx":"2","/home/niemand/Python/massiliarp/frontend/src/components/Home.tsx":"3","/home/niemand/Python/massiliarp/frontend/src/components/Units.tsx":"4","/home/niemand/Python/massiliarp/frontend/src/components/Login.tsx":"5","/home/niemand/Python/massiliarp/frontend/src/components/Navbar.tsx":"6","/home/niemand/Python/massiliarp/frontend/src/components/Population.tsx":"7"},{"size":228,"mtime":1633624901725,"results":"8","hashOfConfig":"9"},{"size":1587,"mtime":1634056635616,"results":"10","hashOfConfig":"9"},{"size":544,"mtime":1633873860329,"results":"11","hashOfConfig":"9"},{"size":8585,"mtime":1633905489635,"results":"12","hashOfConfig":"9"},{"size":2173,"mtime":1633876281749,"results":"13","hashOfConfig":"9"},{"size":3681,"mtime":1634052261053,"results":"14","hashOfConfig":"9"},{"size":4952,"mtime":1634067997345,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"118hqpj",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/niemand/Python/massiliarp/frontend/src/index.tsx",[],["33","34"],"/home/niemand/Python/massiliarp/frontend/src/App.tsx",[],"/home/niemand/Python/massiliarp/frontend/src/components/Home.tsx",["35","36"],"import { FC, useState } from 'react'\nimport Cookies from 'universal-cookie/es6'\n\n// Components\nimport Navbar from './Navbar'\n\ninterface Props {\n    cookies: Cookies\n    setIsAuthenticated: Function\n}\n\nconst Home:FC<Props> = ({ cookies, setIsAuthenticated }) => {\n    // State\n    const [balanceSheets, setBalanceSheets] = useState<string[]>([])\n\n    return (\n        <>\n            <Navbar initSettings={['units', 'buidlings', 'population']} cookies={cookies} setIsAuthenticated={setIsAuthenticated} />\n        </>\n    )\n}\n\nexport default Home\n","/home/niemand/Python/massiliarp/frontend/src/components/Units.tsx",["37","38"],"import React, { FC, useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Cookies from 'universal-cookie/es6'\nimport { BACKEND_URL } from '../App'\n\n// Components\nimport Navbar from './Navbar'\n\ninterface Props {\n    cookies: Cookies\n    setIsAuthenticated: Function\n}\n\ninterface Unit {\n    name: string\n    recruitment_cost: number\n    upkeep_cost: number\n    units_recruited: number\n    settings: number\n}\n\ninterface ArmyUnit extends Unit {\n    raised: boolean\n}\n\ninterface NavyUnit extends Unit {\n\n}\n\nconst Units: FC<Props> = ({ cookies, setIsAuthenticated }) => {\n    // State\n    const [army, setArmy] = useState<ArmyUnit[]>([])\n    const [navy, setNavy] = useState<NavyUnit[]>([])\n\n    const axiosConfig = {\n        headers: {\n            'Content-Type': 'application/json',\n            'X-CSRFToken': cookies.get('csrftoken'),\n        },\n        withCredentials: true,\n    }\n\n    // Get the army units\n    useEffect(() => {\n        axios.get<ArmyUnit[]>(BACKEND_URL + '/api/army-unit', axiosConfig)\n        .then(response => {\n            setArmy(response.data)\n        })\n    }, [])\n\n\n    // Get the navy's ships\n    useEffect(() => {\n        axios.get<NavyUnit[]>(BACKEND_URL + '/api/navy-unit', axiosConfig)\n        .then(response => {\n            setNavy(response.data)\n        })\n    }, [])\n\n    const isResponseOk = (response: any) => {\n        if (response.status < 200 && response.status > 299) {\n            throw Error(response.statusText)\n        }\n        return true\n    }\n\n    const handleRaisedChange = (event: React.MouseEvent<HTMLInputElement>, unit: ArmyUnit) => {\n        unit.raised = !unit.raised\n\n        // Make a shallow copy of the army list\n        let armyCopy = [...army]\n\n        // Find the relevant unit\n        let unitCopy = armyCopy.find(u => u.name === unit.name)\n        if (unitCopy !== undefined) {\n            // Alter the unit\n            const index = armyCopy.indexOf(unitCopy)\n            unitCopy.raised = unit.raised\n            armyCopy[index] = unitCopy\n            setArmy(armyCopy)\n        }\n        \n        // Put data to backend server\n        axios.put(BACKEND_URL + '/api/army-unit/' + unit.name + '/', unit, axiosConfig)\n        .then(resp => isResponseOk(resp))\n    }\n\n    const onArmyUnitBtnClick = (event: React.MouseEvent<HTMLImageElement>, unit: ArmyUnit, isAddition: boolean) => {\n        event.preventDefault()\n\n        // Make a shallow copy of the army list\n        let armyCopy = [...army]\n\n        // Find the relevant unit\n        let unitCopy = armyCopy.find(u => u.name === unit.name)\n        if (unitCopy !== undefined) {\n            // Alter the unit\n            const index = armyCopy.indexOf(unitCopy)\n            unitCopy.units_recruited += isAddition ? 1 : -1\n            armyCopy[index] = unitCopy\n            setArmy(armyCopy)\n        }\n\n        // Inform the backend server about the changes\n        axios.put(BACKEND_URL + '/api/army-unit/' + unit.name + '/', unit, axiosConfig)\n        .then(resp => isResponseOk(resp))\n    }\n\n    const onNavyUnitBtnClick = (event: React.MouseEvent<HTMLImageElement>, unit: NavyUnit, isAddition: boolean) => {\n        event.preventDefault()\n\n        // Same process as the for the army\n        // Check the function above\n        let navyCopy = [...navy]\n        let unitCopy = navyCopy.find(u => u.name === unit.name)\n        if (unitCopy !== undefined) {\n            const index = navyCopy.indexOf(unitCopy)\n            unitCopy.units_recruited += isAddition ? 1 : -1\n            navyCopy[index] = unitCopy\n            setNavy(navyCopy)\n        }\n\n        axios.put(BACKEND_URL + '/api/navy-unit/' + unit.name + '/', unit, axiosConfig)\n        .then(resp => isResponseOk(resp))\n    }\n\n    const onArmyUnitNumberChange = (event: React.ChangeEvent<HTMLInputElement>, unit: ArmyUnit) => {\n        event.preventDefault()\n\n        // Make sure the given value can be safely parsed to number\n        const newValue = event.target.value\n        if (typeof newValue === 'string' && !isNaN(Number(newValue)) && newValue !== '') {\n            unit.units_recruited = parseInt(newValue)\n\n            // Shallow copy\n            let armyCopy = [...army]\n\n            // Find the unit in question\n            let unitCopy = armyCopy.find(u => u.name === unit.name)\n            if (unitCopy !== undefined) {\n                const index = armyCopy.indexOf(unitCopy)\n                unitCopy.units_recruited = unit.units_recruited\n                armyCopy[index] = unitCopy\n                setArmy(armyCopy)\n\n                axios.put(BACKEND_URL + '/api/army-unit/' + unitCopy.name + '/', unitCopy, axiosConfig)\n                .then(resp => isResponseOk(resp))\n            }\n        }\n    }\n\n    const onNavyUnitNumberChange = (event: React.ChangeEvent<HTMLInputElement>, unit: NavyUnit) => {\n        event.preventDefault()\n\n        // Make sure the given value can be safely parsed to number\n        const newValue = event.target.value\n        if (typeof newValue === 'string' && !isNaN(Number(newValue)) && newValue !== '') {\n            unit.units_recruited = parseInt(newValue)\n\n            // Shallow copy\n            let navyCopy = [...navy]\n\n            // Find the unit in question\n            let unitCopy = navyCopy.find(u => u.name === unit.name)\n            if (unitCopy !== undefined) {\n                const index = navyCopy.indexOf(unitCopy)\n                unitCopy.units_recruited = unit.units_recruited\n                navyCopy[index] = unitCopy\n                setNavy(navyCopy)\n\n                axios.put(BACKEND_URL + '/api/navy-unit/' + unitCopy.name + '/', unitCopy, axiosConfig)\n                .then(resp => isResponseOk(resp))\n            }\n        }\n    }\n\n    return (\n        <>\n            <Navbar initSettings={['home', 'buildings', 'population']} cookies={cookies} setIsAuthenticated={setIsAuthenticated} />\n            <div className=\"flex flex-wrap justify-around\">\n                {/* Army units */}\n                <div className=\"flex flex-col\">\n                    <h1><u>Army</u></h1>\n                    {army.map((unit: ArmyUnit) => (\n                        <div key={unit.name} className=\"flex flex-wrap\">\n                            <input type=\"checkbox\" className=\"cursor-pointer\" defaultChecked={unit.raised} onClick={e => {handleRaisedChange(e, unit)}} />\n                            <h2>{unit.name}</h2>\n                            <div>\n                                price: {Math.ceil(unit.recruitment_cost * unit.units_recruited)} <br />\n                                upkeep: {unit.raised ? Math.ceil(unit.upkeep_cost * unit.units_recruited) : 0}\n                            </div>\n                            <img src={process.env.PUBLIC_URL + '/static/minus.ico'} alt=\"minus icon\" onClick={e => { onArmyUnitBtnClick(e, unit, false) }} className=\"cursor-pointer unit-number-icon\" />\n                            <input type=\"text\" value={unit.units_recruited} placeholder={unit.units_recruited.toString()} onChange={e => {onArmyUnitNumberChange(e, unit)}} />\n                            <img src={process.env.PUBLIC_URL + '/static/plus.ico'} alt=\"plus icon\" onClick={e => { onArmyUnitBtnClick(e, unit, true)} } className=\"cursor-pointer unit-number-icon\" />\n                        </div>\n                    ))}\n                </div>\n                {/* Navy units */}\n                <div className=\"flex flex-col\">\n                    <h1>Navy</h1>\n                    {navy.map((unit: NavyUnit) => (\n                        <div key={unit.name} className=\"flex flex-wrap\">\n                            <h2>{unit.name}</h2>\n                            <div>\n                                price: {Math.ceil(unit.recruitment_cost * unit.units_recruited)} <br />\n                                upkeep: {Math.ceil(unit.upkeep_cost * unit.units_recruited)}\n                            </div>\n                            <img src={process.env.PUBLIC_URL + '/static/minus.ico'} alt=\"minus icon\" onClick={e => { onNavyUnitBtnClick(e, unit, false) }} className=\"cursor-pointer unit-number-icon\" />\n                            <input type=\"text\" value={unit.units_recruited} placeholder={unit.units_recruited.toString()} onChange={e => { onNavyUnitNumberChange(e, unit) }} />\n                            <img src={process.env.PUBLIC_URL + '/static/plus.ico'} alt=\"plus icon\" onClick={e => { onNavyUnitBtnClick(e, unit, true) }} className=\"cursor-pointer unit-number-icon\" />\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Units\n","/home/niemand/Python/massiliarp/frontend/src/components/Login.tsx",[],"/home/niemand/Python/massiliarp/frontend/src/components/Navbar.tsx",[],"/home/niemand/Python/massiliarp/frontend/src/components/Population.tsx",["39"],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":14,"column":12,"nodeType":"46","messageId":"47","endLine":14,"endColumn":25},{"ruleId":"44","severity":1,"message":"48","line":14,"column":27,"nodeType":"46","messageId":"47","endLine":14,"endColumn":43},{"ruleId":"49","severity":1,"message":"50","line":49,"column":8,"nodeType":"51","endLine":49,"endColumn":10,"suggestions":"52"},{"ruleId":"49","severity":1,"message":"50","line":58,"column":8,"nodeType":"51","endLine":58,"endColumn":10,"suggestions":"53"},{"ruleId":"49","severity":1,"message":"50","line":47,"column":8,"nodeType":"51","endLine":47,"endColumn":10,"suggestions":"54"},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"@typescript-eslint/no-unused-vars","'balanceSheets' is assigned a value but never used.","Identifier","unusedVar","'setBalanceSheets' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'axiosConfig'. Either include it or remove the dependency array.","ArrayExpression",["57"],["58"],["59"],"no-global-assign","no-unsafe-negation",{"desc":"60","fix":"61"},{"desc":"60","fix":"62"},{"desc":"60","fix":"63"},"Update the dependencies array to be: [axiosConfig]",{"range":"64","text":"65"},{"range":"66","text":"65"},{"range":"67","text":"65"},[1099,1101],"[axiosConfig]",[1311,1313],[1239,1241]]