[{"/home/niemand/Python/massiliarp/frontend/src/index.tsx":"1","/home/niemand/Python/massiliarp/frontend/src/App.tsx":"2","/home/niemand/Python/massiliarp/frontend/src/components/Home.tsx":"3","/home/niemand/Python/massiliarp/frontend/src/components/Units.tsx":"4","/home/niemand/Python/massiliarp/frontend/src/components/Login.tsx":"5","/home/niemand/Python/massiliarp/frontend/src/components/Navbar.tsx":"6"},{"size":228,"mtime":1633624901725,"results":"7","hashOfConfig":"8"},{"size":1364,"mtime":1633892671988,"results":"9","hashOfConfig":"8"},{"size":544,"mtime":1633873860329,"results":"10","hashOfConfig":"8"},{"size":4861,"mtime":1633892520676,"results":"11","hashOfConfig":"8"},{"size":2173,"mtime":1633876281749,"results":"12","hashOfConfig":"8"},{"size":3693,"mtime":1633876080551,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"118hqpj",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"/home/niemand/Python/massiliarp/frontend/src/index.tsx",[],["29","30"],"/home/niemand/Python/massiliarp/frontend/src/App.tsx",[],"/home/niemand/Python/massiliarp/frontend/src/components/Home.tsx",["31","32"],"import { FC, useState } from 'react'\nimport Cookies from 'universal-cookie/es6'\n\n// Components\nimport Navbar from './Navbar'\n\ninterface Props {\n    cookies: Cookies\n    setIsAuthenticated: Function\n}\n\nconst Home:FC<Props> = ({ cookies, setIsAuthenticated }) => {\n    // State\n    const [balanceSheets, setBalanceSheets] = useState<string[]>([])\n\n    return (\n        <>\n            <Navbar initSettings={['units', 'buidlings', 'population']} cookies={cookies} setIsAuthenticated={setIsAuthenticated} />\n        </>\n    )\n}\n\nexport default Home\n","/home/niemand/Python/massiliarp/frontend/src/components/Units.tsx",["33","34"],"/home/niemand/Python/massiliarp/frontend/src/components/Login.tsx",[],"/home/niemand/Python/massiliarp/frontend/src/components/Navbar.tsx",["35"],"import React, { FC, useState } from 'react'\nimport { Link, Redirect } from 'react-router-dom'\nimport Cookies from 'universal-cookie/es6'\nimport { BACKEND_URL } from '../App'\n\ninterface Props {\n    initSettings: string[]\n    cookies: Cookies\n    setIsAuthenticated: Function\n}\n\n// Capitilize the first letter of each word in a string\nconst capitilize = (s: string) => {\n    const arr = s.split(' ')\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = arr[i].charAt(0).toUpperCase() + arr[i].slice(1)\n    }\n\n    return arr.join(' ')\n}\n\nconst Navbar: FC<Props> = ({ initSettings, cookies, setIsAuthenticated }) => {\n    // State\n    const [settings, setSettings] = useState(initSettings)\n    const [dropdown, setDropdown] = useState(false)\n    const [isLoggedOut, setIsLoggedOut] = useState(false)\n\n    const onSettingsClick = (e: React.MouseEvent<HTMLDivElement>) => {\n        e.preventDefault();\n        setDropdown(!dropdown);\n    }\n\n    const endTurnClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n        console.log('end turn')\n    }\n\n    const isResponseOk = (response: any) => {\n        if (response.status >= 200 && response.status <= 299) {\n            return response.json()\n        } else {\n            throw Error(response.statusText)\n        }\n    }\n\n    const onLogoutSubmit = (event: React.MouseEvent<HTMLAnchorElement>) => {\n        event.preventDefault()\n        fetch(BACKEND_URL + '/api-auth/logout/', {\n            headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': cookies.get('csrftoken'),\n            },\n            credentials: 'same-origin',\n        })\n        .then(res => isResponseOk(res))\n        .then(data => {\n            console.log(data)  // -2\n            setIsAuthenticated(false)\n            setIsLoggedOut(true)\n        })\n        .catch(err => {\n            console.log(err)\n        })\n    }\n\n    return (\n        <ul id=\"navbar\" className=\"top-0 m-0 p-0 pr-2 list-none overflow-hidden bg-blue md:pr-12\">\n            <li className=\"inline float-left\">\n                <img src={process.env.PUBLIC_URL + '/static/massilia-icon.webp'} alt=\"massilia logo\" className=\"inline-block\" /><span className=\"text-xl text-silver font-bold\">MassaliaRP</span>\n            </li>\n            <li className=\"inline float-right mx-1.5 md:mx-4\">\n                <button id=\"end-turn-btn\" className=\"p-1.5 border-2 border-silver rounded text-lg text-silver font-bold hover:opacity-60\" onClick={(e) => {endTurnClick(e)}}>End Turn</button>\n            </li>\n            <li className=\"inline float-right mx-1.5 md:mx-10\">\n                <div className=\"flex flex-col justify-end items-center mt-4 cursor-pointer hover:opacity-40\" onClick={(e) => {onSettingsClick(e)}}>\n                    <img id=\"settings-icon\" src={process.env.PUBLIC_URL + '/static/settings-icon.png'} alt=\"settings icon\" />\n                    <span id=\"settings-clickable\" className=\"m-0 p-0 text-2xl font-bold\">&#8249;</span>\n                </div>\n                { dropdown && \n                    <div id=\"settings-dropdown\">\n                        {settings.map((i) => (\n                            <>\n                                <Link key={i} to={'/' + i} className=\"text-blue font-semibold hover:text-salmon-dark\">{capitilize(i)}</Link><br />\n                            </>\n                        ))}\n                        <Link key={'logout'} to=\"/\" className=\"text-blue font-semibold hover:text-salmon-dark\" onClick={(e) => {onLogoutSubmit(e)}}>Logout</Link>\n                        { isLoggedOut && <Redirect to=\"/\" /> }\n                    </div>\n                }\n            </li>\n        </ul>\n    )\n}\n\nexport default Navbar\n",{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":14,"column":12,"nodeType":"42","messageId":"43","endLine":14,"endColumn":25},{"ruleId":"40","severity":1,"message":"44","line":14,"column":27,"nodeType":"42","messageId":"43","endLine":14,"endColumn":43},{"ruleId":"45","severity":1,"message":"46","line":49,"column":8,"nodeType":"47","endLine":49,"endColumn":10,"suggestions":"48"},{"ruleId":"45","severity":1,"message":"46","line":58,"column":8,"nodeType":"47","endLine":58,"endColumn":10,"suggestions":"49"},{"ruleId":"40","severity":1,"message":"50","line":24,"column":22,"nodeType":"42","messageId":"43","endLine":24,"endColumn":33},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"@typescript-eslint/no-unused-vars","'balanceSheets' is assigned a value but never used.","Identifier","unusedVar","'setBalanceSheets' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'axiosConfig'. Either include it or remove the dependency array.","ArrayExpression",["53"],["54"],"'setSettings' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"55","fix":"56"},{"desc":"55","fix":"57"},"Update the dependencies array to be: [axiosConfig]",{"range":"58","text":"59"},{"range":"60","text":"59"},[1099,1101],"[axiosConfig]",[1311,1313]]